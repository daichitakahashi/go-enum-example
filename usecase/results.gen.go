// Code generated by enumgen. DO NOT EDIT.

package usecase

type (
	CheckHealthStatusHandler interface {
		OnCheckHealthStatusHealthy(e CheckHealthStatusHealthy) error
		OnCheckHealthStatusUnhealthy(e CheckHealthStatusUnhealthy) error
	}
	CheckHealthStatusResultEnum interface {
		Handle(v CheckHealthStatusHandler) error
	}
)

func (e CheckHealthStatusHealthy) Handle(v CheckHealthStatusHandler) error {
	return v.OnCheckHealthStatusHealthy(e)
}
func (e CheckHealthStatusUnhealthy) Handle(v CheckHealthStatusHandler) error {
	return v.OnCheckHealthStatusUnhealthy(e)
}

var _ = []CheckHealthStatusResultEnum{CheckHealthStatusHealthy{}, CheckHealthStatusUnhealthy{}}

type __CheckHealthStatusHandler struct {
	__OnCheckHealthStatusHealthy   func(CheckHealthStatusHealthy) error
	__OnCheckHealthStatusUnhealthy func(CheckHealthStatusUnhealthy) error
}

func NewCheckHealthStatusHandler(__OnCheckHealthStatusHealthy func(e CheckHealthStatusHealthy) error, __OnCheckHealthStatusUnhealthy func(e CheckHealthStatusUnhealthy) error) CheckHealthStatusHandler {
	return &__CheckHealthStatusHandler{__OnCheckHealthStatusHealthy: __OnCheckHealthStatusHealthy, __OnCheckHealthStatusUnhealthy: __OnCheckHealthStatusUnhealthy}
}
func (v __CheckHealthStatusHandler) OnCheckHealthStatusHealthy(e CheckHealthStatusHealthy) error {
	return v.__OnCheckHealthStatusHealthy(e)
}
func (v __CheckHealthStatusHandler) OnCheckHealthStatusUnhealthy(e CheckHealthStatusUnhealthy) error {
	return v.__OnCheckHealthStatusUnhealthy(e)
}
